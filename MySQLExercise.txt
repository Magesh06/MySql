create database retail;

use retail;

CREATE TABLE IF NOT EXISTS salespeople (
snum INT NOT NULL,
sname VARCHAR(30) NOT NULL,
city VARCHAR(30) NOT NULL,
comm DECIMAL(4,2) NOT NULL,
PRIMARY KEY (snum)
);

INSERT INTO salespeople VALUES (1001, 'Peel', 'London', 0.12);

Salespeople
SNUM SNAME CITY COMM
1001 Peel London .12
1002 Serres San Jose .13
1004 Motika London .11
1007 Rifkin Barcelona .15
1003 AxelRod New York .10
1005 Fran London .26

CREATE TABLE IF NOT EXISTS customer (
cnum INT NOT NULL,
cname VARCHAR(30) NOT NULL,
city VARCHAR(30) NOT NULL,
rating int not null,
snum int NOT NULL,
PRIMARY KEY (cnum),
FOREIGN KEY (snum) REFERENCES salespeople(snum)
);

INSERT INTO customer VALUES (2001, 'Hoffman', 'London',100, 1001);

Customers
CNUM CNAME CITY RATING SNUM
2001 Hoffman London 100 1001
2002 Giovanni Rome 200 1003
2003 Liu San Jose 200 1002
2004 Grass Berlin 300 1002
2006 Clemens London 100 1001
2008 Cisneros San Jose 300 1007
2007 Pereira Rome 100 1004

CREATE TABLE IF NOT EXISTS orders (
onum INT NOT NULL,
amt DECIMAL(7,2) NOT NULL,
odate Date NOT NULL,
cnum int NOT NULL,
PRIMARY KEY (onum),
FOREIGN KEY (cnum) REFERENCES customer(cnum)
);

INSERT INTO orders VALUES (3001, 18.69, '1996-03-10', 2008);

Orders
ONUM AMT ODATE CNUM
3001 18.69 10/03/96 2008
3003 767.19 10/03/96 2001
3002 1900.10 10/03/96 2007
3005 5160.45 10/03/96 2003
3006 1098.16 10/03/96 2008
3009 1713.23 10/04/96 2002
3007 75.75 10/04/96 2002
3008 4723.00 10/05/96 2006
3010 1309.95 10/06/96 2004
3011 9891.88 10/06/96 2006

show tables ;

describe orders;

Update clause
UPDATE table_name SET field1=new-value1, field2=new-value2
[WHERE Clause]
Delete clause
DELETE FROM table_name [WHERE Clause]



QUERIES:



1. List all the columns of the Salespeople table.
		--->describe Salespeople;

2. List all customers with a rating of 100.

		--->select * from customer where rating = 100;

3. Find all records in the Customer table with NULL values in the city column.

		--->select * from customer where city = null;

4. Find the largest order taken by each salesperson on each date.
		---> select a.cnum,b.snum,b.sname,max(c.amt) from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum group by b.sname;

5. Arrange the Orders table by descending customer number.
		--->select cnum from orders order by cnum desc;
+------+
| cnum |
+------+
| 2008 |
| 2008 |
| 2007 |
| 2006 |
| 2006 |
| 2004 |
| 2003 |
| 2002 |
| 2002 |
| 2001 |
+------+

6. Find which salespeople currently have orders in the Orders table.
		---> select a.cnum,b.snum,b.sname,c.amt from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum;


7. List names of all customers matched with the salespeople serving them.
		--->select a.cname,b.sname from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum;


8. Find the names and numbers of all salespeople who had more than one customer.
		---> select b.snum,b.sname,count(a.cnum) from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum group by b.sname having count(a.cnum)>1;


9. Count the orders of each of the salespeople and output the results in descending order.
		--> select a.cnum,b.snum,b.sname,count(a.cnum) from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum group by b.sname order by b.sname desc;


10. List the Customer table if and only if one or more of the customers in the Customer table are
located in San Jose.
		---> select * from customer where city = 'san jose';		


11. Match salespeople to customers according to what city they lived in.
		--> select a.cname, b.sname, a.city from customer a, salespeople b 
			where a.snum=b.snum group by a.city;
		


12. Find the largest order taken by each salesperson.
		--->select a.sname,b.onum, count(b.onum) from salespeople a, orders b, customer c 
			where a.snum = c.snum and c.cnum = b.cnum group by a.sname;		



13. Find customers in San Jose who have a rating above 200.
		--->slect * from customer where city = 'san jose' and rating >200;

14. List the names and commissions of all salespeople in London.
		--->select sname,comm from salespeople;

15. List all the orders of salesperson Motika from the Orders table.
		--> select b.sname, a.cnum, b.snum, c.onum from customer a, salespeople b, orders c 
			where a.snum = b.snum and a.cnum = c.cnum and b.sname = 'motika';


16. Find all customers with orders on October 3.
		-->  select * from orders where day(odate )= 10 and month(odate)= 03;

17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those
dates where the SUM was not at least 2000.00 above the MAX amount.
		-->select odate, sum(amt) from orders group by odate having sum(amt)>2000.00;


18. Select all orders that had amounts that were greater than at least one of the orders from
October 6.
		--> select onum , odate, amt from orders 
		where amt> (select min(amt) from orders where odate = '1996-06-10');


19. Write a query that uses the EXISTS operator to extract all salespeople who have customers
with a rating of 300.
		


20. Find all pairs of customers having the same rating.
		--->select cname from customer group by rating;

21. Find all customers whose CNUM is 1000 above the SNUM of Serres.


22. Give the salespeople’s commissions as percentages instead of decimal numbers.
		--> select snum, sname, city, (comm)*100 as commisionPercentage from salespeople;


23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders
which are less than $3000.00 in value.


24. List the largest orders for October 3, for each salesperson.
	 --->select a.cnum,b.snum, b.sname,c.onum from customer a, salespeople b, orders c where a.snum=b.snum and a.cnum=c.cnum and c.odate='1996-10-03';
+------+------+--------+------+
| cnum | snum | sname  | onum |
+------+------+--------+------+
| 2008 | 1007 | Rifkin | 3001 |
| 2007 | 1004 | Motika | 3002 |
| 2001 | 1001 | Peel   | 3003 |
| 2003 | 1002 | Serres | 3005 |
| 2008 | 1007 | Rifkin | 3006 |
+------+------+--------+------+


25. Find all customers located in cities where Serres (SNUM 1002) has customers.
		-->select a.cnum,b.snum,c.onum,b.sname,b.city from customer a, salespeople b, orders c 
                   where a.snum=b.snum and a.cnum=c.cnum and b.sname='serres';
+------+------+------+--------+----------+
| cnum | snum | onum | sname  | city     |
+------+------+------+--------+----------+
| 2003 | 1002 | 3005 | Serres | San Jose |
| 2004 | 1002 | 3010 | Serres | San Jose |
+------+------+------+--------+----------+


26. Select all customers with a rating above 200.00.
		--->select cname from customer where rating >200;

27. Count the number of salespeople currently listing orders in the Orders table.
		--->select count(sname) from salespeople; //but it s extracted from salespeople table instead of order table.
+--------------+
| count(sname) |
+--------------+
|            6 |
+--------------+


28. Write a query that produces all customers serviced by salespeople with a commission above
12%. Output the customer’s name and the salesperson’s rate of commission.

		--> select a.cname, a.cnum,b.snum,c.onum,b.sname,b.city from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum and b.comm>0.12;
+----------+------+------+------+--------+-----------+
| cname    | cnum | snum | onum | sname  | city      |
+----------+------+------+------+--------+-----------+
| Liu      | 2003 | 1002 | 3005 | Serres | San Jose  |
| Grass    | 2004 | 1002 | 3010 | Serres | San Jose  |
| Cisneros | 2008 | 1007 | 3001 | Rifkin | Barcelona |
| Cisneros | 2008 | 1007 | 3006 | Rifkin | Barcelona |
+----------+------+------+------+--------+-----------+


29. Find salespeople who have multiple customers.
	 
-->select b.sname from customer a, salespeople b where b.snum=a.snum group by b.snum having count(a.snum)>1;
+--------+
| sname  |
+--------+
| Peel   |
| Serres |
+--------+


30. Find salespeople with customers located in their city.
		-->select a.cname,b.sname,b.city from customer a, salespeople b, orders c 
			where a.snum=b.snum group by b.city;
+----------+---------+-----------+
| cname    | sname   | city      |
+----------+---------+-----------+
| Cisneros | Rifkin  | Barcelona |
| Hoffman  | Peel    | London    |
| Giovanni | AxelRod | New York  |
| Liu      | Serres  | San Jose  |
+----------+---------+-----------+


31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
		--->select sname from salespeople where sname like 'p%';
+-------+
| sname |
+-------+
| Peel  |
+-------+
		--->select sname from salespeople where sname like '___l%';
+---------+
| sname   |
+---------+
| Peel    |
| AxelRod |
+---------+


32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros.
Assume you do not know his customer number.
		--> select * from orders where cnum = (select cnum from customer where cname = 'cisneros');
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 |
| 3006 | 1098.16 | 1996-10-03 | 2008 |
+------+---------+------------+------+


33. Find the largest orders for Serres and Rifkin.
 	-->select b.sname ,max(c.amt) from customer a, salespeople b, orders c where a.snum=b.snum and a.cnum=c.cnum 
	and (b.sname='rifkin' or b.sname='serres') group by b.sname;
+--------+------------+
| sname  | max(c.amt) |
+--------+------------+
| Rifkin |    1098.16 |
| Serres |    5160.45 |
+--------+------------+
		

34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
		--->select snum,sname,comm,city from salespeople;
+------+---------+------+-----------+
| snum | sname   | comm | city      |
+------+---------+------+-----------+
| 1001 | Peel    | 0.12 | London    |
| 1002 | Serres  | 0.13 | San Jose  |
| 1003 | AxelRod | 0.10 | New York  |
| 1004 | Motika  | 0.11 | London    |
| 1005 | Fran    | 0.26 | London    |
| 1007 | Rifkin  | 0.15 | Barcelona |
+------+---------+------+-----------+

35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
 select cname from customer where cname between 'a%' and 'g%';
+----------+
| cname    |
+----------+
| Clemens  |
| Cisneros |
+----------+
		

36. Select all the possible combinations of customers that you can assign.


37. Select all orders that are greater than the average for October 4.
 		-->select * from orders where amt> (select avg (amt) from orders where odate = '1996-10-04') ;
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3002 | 1900.10 | 1996-10-03 | 2007 |
| 3005 | 5160.45 | 1996-10-03 | 2003 |
| 3006 | 1098.16 | 1996-10-03 | 2008 |
| 3008 | 4723.00 | 1996-10-05 | 2006 |
| 3009 | 1713.23 | 1996-10-04 | 2002 |
| 3010 | 1309.95 | 1996-10-06 | 2004 |
| 3011 | 9891.88 | 1996-10-06 | 2006 |
+------+---------+------------+------+


38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city.
		--> select a.cnum, a.cname, a.rating, a.city from customer a 
			where a.rating = (select max(b.rating) from customer b where a.city =  b.city);
+------+----------+--------+----------+
| cnum | cname    | rating | city     |
+------+----------+--------+----------+
| 2001 | Hoffman  |    100 | London   |
| 2002 | Giovanni |    200 | Rome     |
| 2004 | Grass    |    300 | Berlin   |
| 2006 | Clemens  |    100 | London   |
| 2008 | Cisneros |    300 | San Jose |
+------+----------+--------+----------+


39. Write a query that totals the orders for each day and places the results in descending order.
		-->select odate,sum(amt) from orders group by odate order by sum(amt) desc;
+------------+----------+
| odate      | sum(amt) |
+------------+----------+
| 1996-10-06 | 11201.83 |
| 1996-10-03 |  8944.59 |
| 1996-10-05 |  4723.00 |
| 1996-10-04 |  1788.98 |
+------------+----------+


40. Write a select command that produces the rating followed by the name of each customer in
San Jose.
		-->
mysql> select cname , cnum from customer where city = 'san jose';
+----------+------+
| cname    | cnum |
+----------+------+
| Liu      | 2003 |
| Cisneros | 2008 |
+----------+------+

41. Find all orders with amounts smaller than any amount for a customer in San Jose.
		-->select a.onum,a.amt from orders a where a.amt < (select min(a.amt) from orders a, customer b where b.city='san jose');
Empty set (0.00 sec)


42. Find all orders with above average amounts for their customers.
		--> select cnum,onum from orders  where amt > any (select avg(amt) from orders group by cnum);
+------+------+
| cnum | onum |
+------+------+
| 2007 | 3002 |
| 2001 | 3003 |
| 2003 | 3005 |
| 2008 | 3006 |
| 2006 | 3008 |
| 2002 | 3009 |
| 2004 | 3010 |
| 2006 | 3011 |
+------+------+


43. Write a query that selects the highest rating in each city.
		--->select city, max(rating) from customer group by city;
+----------+-------------+
| city     | max(rating) |
+----------+-------------+
| Berlin   |         300 |
| London   |         100 |
| Rome     |         200 |
| San Jose |         300 |
+----------+-------------+

44. Write a query that calculates the amount of the salesperson’s commission on each order by a
customer with a rating above 100.00.
		-->select a.snum,b.sname,c.onum,b.comm,b.comm*c.amt as Sincome from customer a, salespeople b, orders c 
			where a.snum=b.snum and a.cnum=c.cnum and a.rating>100;
+------+---------+------+------+----------+
| snum | sname   | onum | comm | Sincome  |
+------+---------+------+------+----------+
| 1003 | AxelRod | 3007 | 0.10 |   7.5750 |
| 1003 | AxelRod | 3009 | 0.10 | 171.3230 |
| 1002 | Serres  | 3005 | 0.13 | 670.8585 |
| 1002 | Serres  | 3010 | 0.13 | 170.2935 |
| 1007 | Rifkin  | 3001 | 0.15 |   2.8035 |
| 1007 | Rifkin  | 3006 | 0.15 | 164.7240 |
+------+---------+------+------+----------+


45. Count the customers with ratings above San Jose’s average.
		--> select  cname,rating from customer where rating >(select avg(rating) from customer where city = 'san jose');
+----------+--------+
| cname    | rating |
+----------+--------+
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+


46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows
with the order reversed.


47. Find all salespeople that are located in either Barcelona or London.
		--> select sname from salespeople where city = 'london' or city='barcelona';
+--------+
| sname  |
+--------+
| Peel   |
| Motika |
| Fran   |
| Rifkin |
+--------+


48. Find all salespeople with only one customer.
		-->select a.snum,b.sname,a.cname from customer a, salespeople b 
			where a.snum=b.snum group by a.snum having count(a.snum)=1;
+------+---------+----------+
| snum | sname   | cname    |
+------+---------+----------+
| 1003 | AxelRod | Giovanni |
| 1004 | Motika  | Pereira  |
| 1007 | Rifkin  | Cisneros |
+------+---------+----------+


49. Write a query that joins the Customer table to itself to find all pairs of customers served by a
single salesperson.
50. Write a query that will give you all orders for more than $1000.00
51. Write a query that lists each order number followed by the name of the customer who made
that order.
52. Write 2 queries that select all salespeople (by name and number) who have customers in their
cities who they do not service, one using a join and one a corelated subquery. Which solution
is more elegant?
53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the
SQL sense) of Serres’?
54. Write 2 queries that will produce all orders taken on October 3 or October 4.

 select odate, onum from orders where odate = '1996-10-03';
+------------+------+
| odate      | onum |
+------------+------+
| 1996-10-03 | 3001 |
| 1996-10-03 | 3002 |
| 1996-10-03 | 3003 |
| 1996-10-03 | 3005 |
| 1996-10-03 | 3006 |
+------------+------+

select odate, onum from orders where odate = '1996-10-04';
+------------+------+
| odate      | onum |
+------------+------+
| 1996-10-04 | 3007 |
| 1996-10-04 | 3009 |
+------------+------+


55. Write a query that produces all pairs of orders by a given customer. Name that customer and
eliminate duplicates.
56. Find only those customers whose ratings are higher than every customer in Rome.
		-->select cname,rating from customer where rating  >(select max(rating) from customer where city = 'rome');
+----------+--------+
| cname    | rating |
+----------+--------+
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+

57. Write a query on the Customers table whose output will exclude all customers with a rating <=
100.00, unless they are located in Rome.
58. Find all rows from the Customers table for which the salesperson number is 1001.
		-->(select a.cnum,a.cname,a.city,a.rating,a.snum from customer a , salespeople b where a.snum=b.snum and a.snum = 1001);
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+
59. Find the total amount in Orders for each salesperson for whom this total is greater than the
amount of the largest order in the table.


60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.
		--> select onum from orders where amt = null;
Empty set (0.00 sec)

61. Produce all combinations of salespeople and customer names such that the former precedes
the latter alphabetically, and the latter has a rating of less than 200.
62. List all Salespeople’s names and the Commission they have earned.

		
mysql> select  b.snum,b.sname, b.comm as CommissionEarned from customer a, salespeople b, orders c where a.cnum=c.cnum and b.snum=a.snum;
+------+---------+------------------+
| snum | sname   | CommissionEarned |
+------+---------+------------------+
| 1001 | Peel    |             0.12 |
| 1001 | Peel    |             0.12 |
| 1001 | Peel    |             0.12 |
| 1002 | Serres  |             0.13 |
| 1002 | Serres  |             0.13 |
| 1003 | AxelRod |             0.10 |
| 1003 | AxelRod |             0.10 |
| 1004 | Motika  |             0.11 |
| 1007 | Rifkin  |             0.15 |
| 1007 | Rifkin  |             0.15 |
+------+---------+------------------+
63. Write a query that produces the names and cities of all customers with the same rating as
Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be
usable if his rating changed.
64. Find all salespeople for whom there are customers that follow them in alphabetical order.
65. Write a query that produces the names and ratings of all customers of all who have above
average orders.


66. Find the SUM of all purchases from the Orders table.

		 select sum(amt) as sumOfAllPurchase from orders;
+------------------+
| sumOfAllPurchase |
+------------------+
|         26658.40 |
+------------------+
67. Write a SELECT command that produces the order number, amount and date for all rows in
the order table.
68. Count the number of nonNULL rating fields in the Customers table (including repeats).
69. Write a query that gives the names of both the salesperson and the customer for each order
after the order number.
70. List the commissions of all salespeople servicing customers in London.

	 select  b.snum,b.comm, b.sname, a.cname,a.city as ccity from customer a, salespeople b, orders c where a.cnum=c.cnum and b.snum=a.snum and a.city='london';
+------+------+-------+---------+--------+
| snum | comm | sname | cname   | ccity  |
+------+------+-------+---------+--------+
| 1001 | 0.12 | Peel  | Hoffman | London |
| 1001 | 0.12 | Peel  | Clemens | London |
| 1001 | 0.12 | Peel  | Clemens | London |
+------+------+-------+---------+--------+

71. Write a query using ANY or ALL that will find all salespeople who have no customers located in
their city.
72. Write a query using the EXISTS operator that selects all salespeople with customers located in
their cities who are not assigned to them.
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field
relates the two tables to one another.)
74. Count the number of salespeople registering orders for each day. (If a salesperson has more
than one order on a given day, he or she should be counted only once.)
75. Find all orders attributed to salespeople in London.
76. Find all orders by customers not located in the same cities as their salespeople.
77. Find all salespeople who have customers with more than one current order.
78. Write a query that extracts from the Customers table every customer assigned to a
salesperson who currently has at least one other customer (besides the customer being
selected) with orders in the Orders table.
79. Write a query that selects all customers whose names begin with ‘C’.
80. Write a query on the Customers table that will find the highest rating in each city. Put the output
in this form : for the city (city) the highest rating is : (rating).
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the
Orders table (without any repeats).
82. Write a query that lists customers in descending order of rating. Output the rating field first,
followed by the customer’s names and numbers.

mysql> select a.rating, a.cname,a.cnum from customer a, salespeople b, orders c where a.cnum=c.cnum and b.snum=a.snum  order by a.rating;
+--------+----------+------+
| rating | cname    | cnum |
+--------+----------+------+
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
|    200 | Giovanni | 2002 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2008 |
|    300 | Cisneros | 2008 |
+--------+----------+------+

83. Find the average commission for salespeople in London.
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).
86. Write a query that will give you the names and cities of all salespeople in London with a
commission above 0.10.
87. What will be the output from the following query?
SELECT * FROM ORDERS
where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum >
2003));

mysql> SELECT * FROM ORDERS
    -> where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum >
    -> 2003));
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 |
| 3002 | 1900.10 | 1996-10-03 | 2007 |
| 3003 |  767.19 | 1996-10-03 | 2001 |
| 3005 | 5160.45 | 1996-10-03 | 2003 |
| 3006 | 1098.16 | 1996-10-03 | 2008 |
| 3007 |   75.75 | 1996-10-04 | 2002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 |
| 3009 | 1713.23 | 1996-10-04 | 2002 |
| 3010 | 1309.95 | 1996-10-06 | 2004 |
| 3011 | 9891.88 | 1996-10-06 | 2006 |
+------+---------+------------+------+
88. Write a query that selects each customer’s smallest order.
89. Write a query that selects the first customer in alphabetical order whose name begins with G.
90. Write a query that counts the number of different nonNULL city values in the Customers table.
91. Find the average amount from the Orders table.
92. What would be the output from the following query?
SELECT * FROM ORDERS
WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >=
1500);
93. Find all customers who are not located in San Jose and whose rating is above 200.
94. Give a simpler way to write this query :
SELECT snum, sname city, comm FROM salespeople
WHERE (comm > + 0.12 OR comm < 0.14);
95. Evaluate the following query :
SELECT * FROM orders
WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);
96. Which salespersons attend to customers not in the city they have been assigned to?
97. Which salespeople get commission greater than 0.11 are serving customers rated less than
250?
98. Which salespeople have been assigned to the same city but get different commission
percentages?
99. Which salesperson has earned the most by way of commission?
100.Does the customer who has placed the maximum number of orders have the maximum rating?
101.Has the customer who has spent the largest amount of money been given the highest rating?
102.List all customers in descending order of customer rating.
103.On which days has Hoffman placed orders?


mysql> select  b.snum,b.sname, b.comm, a.cname,c.odate from customer a, salespeople b, orders c where a.cnum=c.cnum and b.snum=a.snum and a.cname='hoffman';
+------+-------+------+---------+------------+
| snum | sname | comm | cname   | odate      |
+------+-------+------+---------+------------+
| 1001 | Peel  | 0.12 | Hoffman | 1996-10-03 |
+------+-------+------+---------+------------+
104.Do all salespeople have different commissions?
105.Which salespeople have no orders between 10/03/1996 and 10/05/1996?
106.How many salespersons have succeeded in getting orders?
107.How many customers have placed orders?
108.On which date has each salesperson booked an order of maximum value?
109.Who is the most successful salesperson?
110.Who is the worst customer with respect to the company?
111.Are all customers not having placed orders greater than 200 totally been serviced by
salespersons Peel or Serres?
112.Which customers have the same rating?


113.Find all orders greater than the average for October 4th.
114.Which customers have above average orders?
115.List all customers with ratings above San Jose’s average.
116.Select the total amount in orders for each salesperson for whom the total is greater than the
amount of the largest order in the table.
117.Give names and numbers of all salespersons who have more than one customer.
118.Select all salespersons by name and number who have customers in their city whom they
don’t service.
119.Which customers’ rating should be lowered?
120.Is there a case for assigning a salesperson to Berlin?
121.Is there any evidence linking the performance of a salesperson to the commission that he or
she is being paid?
122.Does the total amount in orders by customer in Rome and London exceed the commission
paid to salespersons in London and New York by more than 5 times?
123.Which is the date, order number, amt and city for each salesperson (by name) for the
maximum order he has obtained?
124.Which salesperson(s) should be fired?
125.What is the total income for the company?
126.
127. Find the contribution of each salesperson in percentage?